version: 2.1

orbs:
    docker: circleci/docker@1.0.1

jobs:
    prepare-dependencies:
        docker:
            - image: circleci/node:stretch
        working_directory: /mnt/ramdisk
        steps:
            - checkout
            - run:
                  name: Compute version number
                  command: echo "0.0.${CIRCLE_BUILD_NUM}-${CIRCLE_SHA1:0:7}" | tee version.txt
            - restore_cache:
                  keys:
                      - yarn-packages-{{ checksum "yarn.lock" }}
            - run:
                  name: yarn install
                  command: yarn install --frozen-lockfile  
            - save_cache:
                  paths:
                      -  ~/.cache/yarn
                  key: yarn-packages-{{ checksum "yarn.lock" }}
            - store_artifacts:
                  path: yarn.lock
            - persist_to_workspace:
                  root: /mnt/ramdisk
                  paths:
                      - ./*

    build-production:
        docker:
            - image: circleci/node:stretch
        environment:
          CACHE_IMAGE: brianoh1979/nodejs-circleci
          DOCKER_BUILDKIT: 1
        steps:
            - attach_workspace:
                  at: /mnt/ramdisk
            - setup_remote_docker:
                version: 19.03.13
                docker_layer_caching: false
            - run: mkdir -p workspace
            - run:
                name: Build from dockerfile
                command: |
                  docker build \
                    --cache-from $CACHE_IMAGE:latest \
                    --tag $CACHE_IMAGE:latest \
                    --build-arg BUILDKIT_INLINE_CACHE=1 \
                    "."
#            - run:
#                  name: Production build
#                  command: |
#                      export __BUILD_VERSION="$(cat version.txt)"
#                      yarn build
            - store_artifacts:
                  path: dist/server.js
 #           - persist_to_workspace:
 #                 paths:
 #                     - ./*
            - persist_to_workspace:
                  root: .
                  paths:
                      - .

    build-docker-image:
        machine:
            image: ubuntu-1604:202004-01
        steps:
            - attach_workspace:
                  at: ./
            - run:
                  name: Setup __BUILD_VERSION envvar
                  command: |
                      echo "export __BUILD_VERSION=\"$(date)\"" >> $BASH_ENV
            - docker/check:
                  registry: $DOCKER_REGISTRY
            - docker/build:
                  image: $DOCKER_IMAGE_NAME
                  tag: $__BUILD_VERSION
                  registry: $DOCKER_REGISTRY
            - docker/push:
                  image: $DOCKER_IMAGE_NAME
                  tag: $__BUILD_VERSION
                  registry: $DOCKER_REGISTRY

    test:
        docker:
            - image: circleci/node:stretch
        parallelism: 2
        steps:
            - attach_workspace:
                  at: ./
  #          - run:
  #                name: Run tests
  #                command: |
  #                    circleci tests glob '**/*.test.ts' | circleci tests split --split-by timings | xargs yarn test:ci
  #          - store_artifacts:
  #                path: test-results
  #          - store_test_results:
  #                path: test-results

    deploy-docker-image:
        machine:
            image: ubuntu-1604:202004-01
        steps:
            - attach_workspace:
                  at: ./
            - run:
                  name: Setup __BUILD_VERSION envvar
                  command: |
                      echo "export __BUILD_VERSION=\"$(date)\"" >> $BASH_ENV
            - docker/check:
                  registry: $DOCKER_REGISTRY
            - docker/pull:
                  images: $DOCKER_REGISTRY/$DOCKER_IMAGE_NAME:$__BUILD_VERSION
            - run:
                  name: Tag the image as latest
                  command: docker tag $DOCKER_REGISTRY/$DOCKER_IMAGE_NAME:$__BUILD_VERSION $DOCKER_REGISTRY/$DOCKER_IMAGE_NAME:latest
            - docker/push:
                  image: $DOCKER_IMAGE_NAME
                  tag: latest
                  registry: $DOCKER_REGISTRY

workflows:
    version: 2
    build-test-deploy:
        jobs:
            - prepare-dependencies
            - build-production:
                  requires:
                      - prepare-dependencies
 #           - build-docker-image:
 #                 requires:
 #                     - build-production
            - test:
                  requires:
                      - prepare-dependencies
 #           - deploy-docker-image:
 #                 requires:
 #                     - build-docker-image
 #                     - test
